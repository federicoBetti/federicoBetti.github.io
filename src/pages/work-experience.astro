---
import BaseLayout from "../layouts/BaseLayout.astro";
import TimeLineElement from "../components/cv/TimeLine.astro";
import { getCollection } from "astro:content";
import dayjs from "dayjs";
import customParseFormat from "dayjs/plugin/customParseFormat";

dayjs.extend(customParseFormat);

const experiences = (await getCollection("work-experience")).sort((a, b) => {
    // Sort by start date descending (most recent first)
    // Convert startDate strings to comparable values
    const dateA = a.data.startDate.split(" ").pop() || "0"; // Get the year, default to "0" if undefined
    const dateB = b.data.startDate.split(" ").pop() || "0";
    return parseInt(dateB) - parseInt(dateA);
});

function parseMonthYear(dateStr) {
    const formats = ["MMM YYYY", "MMMM YYYY", "YYYY"]; // fallbacks
    for (const fmt of formats) {
        const d = dayjs(dateStr, fmt);
        if (d.isValid()) return d;
    }
    return dayjs(NaN);
}

function formatDuration(startStr, endStr) {
    const start = parseMonthYear(startStr);
    const end =
        !endStr || endStr.toLowerCase() === "present"
            ? dayjs()
            : parseMonthYear(endStr);
    if (!start.isValid() || !end.isValid()) return "";
    const totalMonths = end.diff(start, "month");
    const years = Math.floor(totalMonths / 12);
    const months = totalMonths % 12;
    const parts: string[] = [];
    if (years > 0) parts.push(`${years} ${years === 1 ? "year" : "years"}`);
    if (months > 0)
        parts.push(`${months} ${months === 1 ? "month" : "months"}`);
    if (parts.length === 0) parts.push("< 1 month");
    return parts.join(" ");
}
---

<BaseLayout title="Work Experience" sideBarActiveItemID="work-experience">
    <div class="mb-5">
        <div class="text-3xl w-full font-bold">Work Experience</div>
    </div>

    <div class="time-line-container mb-10">
        {
            experiences.map((experience) => (
                <TimeLineElement
                    title={`${experience.data.title} at ${experience.data.company}`}
                    subtitle={`From ${experience.data.startDate} to ${experience.data.endDate || "Present"} (${formatDuration(experience.data.startDate, experience.data.endDate)}) at ${experience.data.company}, ${experience.data.location}`}
                >
                    <p class="mb-4">{experience.data.description}</p>

                    {experience.data.tags && (
                        <div class="tag-row mb-2">
                            {experience.data.tags.map((tag) => (
                                <span class="tag">{tag}</span>
                            ))}
                        </div>
                    )}

                    <div class="mt-4 mb-6">
                        <a
                            href={`/work-experience/${experience.slug}`}
                            class="btn btn-outline btn-sm"
                        >
                            View Details
                        </a>
                    </div>
                </TimeLineElement>
            ))
        }
    </div>
</BaseLayout>
